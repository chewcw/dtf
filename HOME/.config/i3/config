# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8
font pango:DejaVu Sans Mono 9

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# switch to next workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym --whole-window $mod+button3 floating toggle
# toggle sticky
bindsym --whole-window $mod+Shift+button3 sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+shift+a focus child

# workspace variables
set $workspace1 "1"
set $workspace2 "2"
set $workspace3 "3"
set $workspace4 "4"
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9"
set $workspace0 "0"

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1 
bindsym $mod+Shift+2 move container to workspace $workspace2 
bindsym $mod+Shift+3 move container to workspace $workspace3 
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace0

# Assign app to workspace
# assign [class="Brave-browser"] $workspace3
# assign [class="Code"] $workspace1

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# border color
client.focused #ffd700 #2a2a2a #ffffff #8be503 #ffd700
# client.unfocused #2a2a2a #2a2a2a #ffffff #2a2a2a #2a2a2a

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
}

# i3-gap
for_window [class=".*"] border pixel 1
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym h      mode "$mode_gaps_horiz"
    bindsym v      mode "$mode_gaps_verti"
    bindsym t      mode "$mode_gaps_top"
    bindsym r      mode "$mode_gaps_right"
    bindsym b      mode "$mode_gaps_bottom"
    bindsym l      mode "$mode_gaps_left"
    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
    bindsym plus  gaps horizontal current plus 5
    bindsym minus gaps horizontal current minus 5
    bindsym 0     gaps horizontal current set 0

    bindsym Shift+plus  gaps horizontal all plus 5
    bindsym Shift+minus gaps horizontal all minus 5
    bindsym Shift+0     gaps horizontal all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
    bindsym plus  gaps vertical current plus 5
    bindsym minus gaps vertical current minus 5
    bindsym 0     gaps vertical current set 0

    bindsym Shift+plus  gaps vertical all plus 5
    bindsym Shift+minus gaps vertical all minus 5
    bindsym Shift+0     gaps vertical all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
    bindsym plus  gaps top current plus 5
    bindsym minus gaps top current minus 5
    bindsym 0     gaps top current set 0

    bindsym Shift+plus  gaps top all plus 5
    bindsym Shift+minus gaps top all minus 5
    bindsym Shift+0     gaps top all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
    bindsym plus  gaps right current plus 5
    bindsym minus gaps right current minus 5
    bindsym 0     gaps right current set 0

    bindsym Shift+plus  gaps right all plus 5
    bindsym Shift+minus gaps right all minus 5
    bindsym Shift+0     gaps right all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
    bindsym plus  gaps bottom current plus 5
    bindsym minus gaps bottom current minus 5
    bindsym 0     gaps bottom current set 0

    bindsym Shift+plus  gaps bottom all plus 5
    bindsym Shift+minus gaps bottom all minus 5
    bindsym Shift+0     gaps bottom all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
    bindsym plus  gaps left current plus 5
    bindsym minus gaps left current minus 5
    bindsym 0     gaps left current set 0

    bindsym Shift+plus  gaps left all plus 5
    bindsym Shift+minus gaps left all minus 5
    bindsym Shift+0     gaps left all set 0

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}

gaps inner 0

# desktop background
exec feh --bg-scale ~/Pictures/wallpaper.jpg

# move workspace to another monitor
bindsym $mod+Ctrl+h move workspace to output left
bindsym $mod+Ctrl+l move workspace to output right

# Pulse Audio controls
bindsym $mod+plus exec "amixer -D pulse sset Master 5%+"
bindsym $mod+minus exec "amixer -D pulse sset Master 5%-"
bindsym $mod+Shift+m exec "amixer -D pulse sset Master mute"
bindsym $mod+Shift+u exec "amixer -D pulse sset Master unmute"

# Brightness controls
bindsym $mod+Shift+plus exec "sudo brightnessctl set 5%+"
bindsym $mod+Shift+minus exec "sudo brightnessctl set 5%-"

# system control (shutdown, reboot, etc.)
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id "i3lock -c 000000", mode "default"
    bindsym e exec --no-startup-id "i3-msg exit", mode "default"
    bindsym s exec --no-startup-id "sudo systemctl suspend", mode "default"
    bindsym h exec --no-startup-id "sudo systemctl hibernate", mode "default"
    bindsym r exec --no-startup-id "sudo systemctl reboot", mode "default"
    bindsym Shift+s exec --no-startup-id "sudo systemctl poweroff", mode "default"

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+Escape mode "$mode_system"

# -----------------------------------------------------------
# move mouse cursor using keyboard
# dependency: xdotool
# https://www.reddit.com/r/i3wm/comments/3btki2/use_the_mouse_cursor_from_the_keyboard/
mode "mouse" {

# set speeds here
    set $slow 5
    set $quick 40
    set $fast 100

# Mouse movement (slow/fine-tuned) -- vim keybindings
    bindsym Shift+h exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+j exec xdotool mousemove_relative 0 $slow
    bindsym Shift+k exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+l exec xdotool mousemove_relative $slow 0

# Mouse movement (quicker) -- vim keybindings
    bindsym h exec xdotool mousemove_relative -- -$quick 0
    bindsym j exec xdotool mousemove_relative 0 $quick
    bindsym k exec xdotool mousemove_relative -- 0 -$quick
    bindsym l exec xdotool mousemove_relative $quick 0

# Mouse movement (faster) -- vim keybindings
    bindsym Ctrl+h exec xdotool mousemove_relative -- -$fast 0
    bindsym Ctrl+j exec xdotool mousemove_relative 0 $fast
    bindsym Ctrl+k exec xdotool mousemove_relative -- 0 -$fast
    bindsym Ctrl+l exec xdotool mousemove_relative $fast 0

# Left Click
    bindsym f exec xdotool click 1

# Middle Click
    bindsym d exec xdotool click 2

# Right Click
    bindsym s exec xdotool click 3

# Left Click-and-drag
    bindsym Shift+f exec xdotool mousedown 1

# Middle Click-and-drag 
    bindsym Shift+d exec xdotool mousedown 2

# Right Click-and-drag
    bindsym Shift+s exec xdotool mousedown 3

# Left Drag release
    bindsym Ctrl+f exec xdotool mouseup 1

# Middle Drag release
    bindsym Ctrl+d exec xdotool mouseup 2

# Right Drag release
    bindsym Ctrl+s exec xdotool mouseup 3

# Scroll down
    bindsym $mod+j exec xdotool click 5
# Scroll up
    bindsym $mod+k exec xdotool click 4

# return to normal keybindings -- IMPORTANT!!
    bindsym $mod+m mode "default"

# these should still work
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace0
}

bindsym $mod+m mode "mouse"
# -----------------------------------------------------------

# printscreen (flameshot)
# https://github.com/flameshot-org/flameshot#usage
bindsym $mod+Shift+p exec flameshot gui
bindsym $mod+Ctrl+p exec flameshot full -c -p $HOME/Pictures
bindsym $mod+p exec flameshot screen -c -p $HOME/Pictures

# open file explorer GUI
bindsym $mod+Shift+f exec nautilus --no-desktop

# compton
# exec compton
exec source ~/.zshrc

# custom keyboard shortcut
# insert current date time
bindsym --release $mod+t exec --no-startup-id sleep 0.1 && xdotool type "$(date +\"%Y-%m-%d (%a) %r\")"

# open terminal once log in
exec --no-startup-id i3-msg 'workspace 2; exec /usr/bin/alacritty -e tmux'

# Execute toggle between light and dark colorscheme command
bindsym $mod+Shift+b exec $HOME/.local/bin/toggle-colorscheme.sh

# lxqt ubuntu only
# open monitor configuration
bindsym $mod+Shift+w exec lxql-config-monitor
bindsym $mod+o exec $HOME/Documents/connect_monitor.sh && xset r rate 300 70 && fcitx && 1>/dev/null 2>&1

# enable / disable caps mode (show caps mode on the i3 status bar)
# https://faq.i3wm.org/question/1258/i3bari3status-is-it-possible-to-have-caps-lock-and-num-lock-indicator.1.html
mode "caps" {
    bindsym Caps_Lock mode "default"
}
bindsym Caps_Lock mode "caps"
